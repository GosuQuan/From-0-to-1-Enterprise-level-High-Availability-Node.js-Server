name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile --registry=https://registry.npmmirror.com
      
    # - name: Run tests
    #   run: pnpm test
      
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: gosuquan/node-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: SSH into server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_HOST}}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull gosuquan/node-test:latest
          docker stop node-test || true
          docker rm node-test || true
          docker run -d \
            --name node-test \
            --restart unless-stopped \
            -p 3000:3000 \
            -e NODE_ENV=production \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASS=${{ secrets.DB_PASS }} \
            gosuquan/node-test:latest